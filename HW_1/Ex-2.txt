#2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6. Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.




list_5 = list(format(5, 'b'))
list_6 = list(format(6, 'b'))
list_and = list()
list_or = list()
list_xor = list()
left_shift_5 = list()
left_shift_6 = list()
right_shift_5 = list()
right_shift_6 = list()


if list_5[0] == '1' and list_6[0] == '1':
    list_and.append('1')
else:
    list_and.append('0')
if list_5[1] == '1' and list_6[1] == '1':
    list_and.append('1')
else:
    list_and.append('0')
if list_5[2] == '1' and list_6[2] == '1':
    list_and.append('1')
else:
    list_and.append('0')

if list_5[0] == '1' or list_6[0] == '1':
    list_or.append('1')
else:
    list_or.append('0')
if list_5[1] == '1' or list_6[1] == '1':
    list_or.append('1')
else:
    list_or.append('0')
if list_5[2] == '1' or list_6[2] == '1':
    list_or.append('1')
else:
    list_or.append('0')

if list_5[0] ==  list_6[0]:
    list_xor.append('0')
else:
    list_xor.append('1')
if list_5[1] == list_6[1]:
    list_xor.append('0')
else:
    list_xor.append('1')
if list_5[2] == list_6[2]:
    list_xor.append('0')
else:
    list_xor.append('1')

left_shift_5 = list_5 + ['00']#побитовый сдвиг влево, это по сути, прибавление нулей в конец битовой последовательности. Количество нулей соответствует количеству сдвигаемых битов (в нашем случае двум).
left_shift_6 = list_6 + ['00']
list_5.insert(0, '00')#Побитовый сдвиг вправо это прибавление нулей к битовой последовательности слева в количестве сдвигаемых битов и далее берем срез по количесвту первоначальных битов в числе
list_6.insert(0, '00')
right_shift_5 = ''.join(list_5)
right_shift_6 = ''.join(list_6)
right_shift_5 = right_shift_5[:3]
right_shift_6 = right_shift_6[:3]
print(f"""Результат операции \"И\" = {''.join(list_or)}, Результат операции \"ИЛИ\" = {''.join(list_and)}, Результат операции \"XOR\" = {''.join(list_xor)}
Результат смещения вправо на 2 пяти = {right_shift_5} десятичная система исчисления = {int(right_shift_5, 2)}\nРезультат смещения влево на два пяти = {''.join(left_shift_5)} десятичная система исчисления = {int(''.join(left_shift_5), 2)}
Результат смещения вправо на 2 шести = {right_shift_6} десятичная система исчисления = {int(right_shift_6, 2)}\nРезультат смещения влево на два пяти = {''.join(left_shift_6)} десятичная система исчисления = {int(''.join(left_shift_6), 2)}""")

#При побитовом сдвиге влево получается всегда число равное первоначальному умноженное на два в степени числа на которое мы сдвигаем биты (в нашем случае для 5 это 5 * 2**2 = 20 и для 6 = 6*2**2 = 24)
#При побитовом сдвиге вправо происходит обратная операция предыдущей, результатом которой является целая часть от деления. В нашем  случае для пяти это: 5 / 2**2 = 1, для шести: 6 / 2**2 = 1